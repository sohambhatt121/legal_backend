{
    "openapi": "3.0.0",
    "info": {
      "title": "Legal Software APIs",
      "version": "1.0.0"
    },
    "tags": [
        {
          "name": "Customer",
          "description": "Customer APIs"
        },
        {
            "name": "User",
            "description": "User APIs"
        },
        {
            "name": "Login",
            "description": "Login APIs"
        },
        {
            "name": "Client",
            "description": "Client APIs"
        },
        {
            "name": "Case",
            "description": "Case APIs"
        },
        {
            "name": "Document",
            "description": "Document"
        }
    ],
    "paths": {
      "/api/v1/customer": {
        "get": {
          "summary": "Get all customers",
          "tags": ["Customer"],
          "parameters": [
            {
                "name": "authToken",
                "in": "header",
                "description": "authToken",
                "required": true,
                "type": "string",
                "format": "string"
            },
            {
                "name": "status",
                "in": "query",
                "description": "Status (0: inactive, 1: active (default), 2: deleted, 3: active+inactive, 4: all)",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
            "summary": "Add new customer",
            "tags": ["Customer"],
            "parameters": [
                {
                    "name": "authToken",
                    "in": "header",
                    "description": "Auth Token",
                    "required": true,
                    "schema": {
                      "type": "string"
                    }
                }
              ],
            "requestBody": {
                "required": true,
                "content": {
                "application/json": {
                    "schema": {
                    "type": "object",
                    "properties": {
                        "customer_code": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "address": {
                            "type": "string"
                        },
                        "contact": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "phone": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                }
                            },
                        "required": ["name", "phone", "email"]
                        },
                        "status": {
                            "type": "integer",
                            "default":1
                        }
                    },
                    "required": ["customer_code", "name", "address", "contact"]
                    }
                }
                }
            },
            "responses": {
                "201": {
                "description": "customer added successfully"
                },
                "400": {
                "description": "Invalid request data"
                }
            }
        }
      },
      "/api/v1/customer/{id}": {
        "get": {
          "summary": "Get customer by ID",
          "tags": ["Customer"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "ID of the customer"
            },
            {
                "name": "authToken",
                "in": "header",
                "description": "Auth Token",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
          ],
          "responses": {
            "200": {
              "description": "Successful response - Customer found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "404": {
              "description": "customer not found"
            }
          }
        },
        "put": {
          "summary": "Update customer by ID",
          "tags": ["Customer"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "ID of the customer"
            },
            {
                "name": "authToken",
                "in": "header",
                "description": "Auth Token",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customer_code": {"type": "string"},
                    "name": {"type": "string"},
                    "address": {"type": "string"},
                    "contact": {
                      "type": "object",
                      "properties": {
                        "name": {"type": "string"},
                        "phone": {"type": "string"},
                        "email": {"type": "string"}
                      }
                    },
                    "status": {
                        "type": "integer",
                        "default":1
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "customer updated successfully"
            },
            "404": {
              "description": "customer not found"
            },
            "400": {
              "description": "Invalid request"
            }
          }
        },
        "delete": {
          "summary": "Delete customer by ID",
          "tags": ["Customer"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "ID of the customer"
            },
            {
                "name": "authToken",
                "in": "header",
                "description": "Auth Token",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
          ],
          "responses": {
            "200": {
              "description": "customer deleted successfully"
            },
            "404": {
              "description": "customer not found"
            }
          }
        }
      },
      "/api/v1/customer_code/{id}": {
        "get": {
          "summary": "Get customer by customer code",
          "tags": ["Customer"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "ID of the customer"
            },
            {
                "name": "authToken",
                "in": "header",
                "description": "Auth Token",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "404": {
              "description": "customer not found"
            }
          }
        }
      },
      "/api/v1/user": {
        "get": {
            "summary": "Get all Users",
            "tags": ["User"],
            "parameters": [
              {
                  "name": "authToken",
                  "in": "header",
                  "description": "Auth Token",
                  "required": true,
                  "schema": {
                    "type": "string"
                  }
              }
            ],
            "responses": {
              "200": {
                "description": "Successful operation",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
        },
        "post": {
          "summary": "Create a new user",
          "tags": ["User"],
          "description": "Endpoint to create a new user",
          "parameters": [
            {
                "name": "authToken",
                "in": "header",
                "description": "Auth Token",
                "required": true,
                "schema": {
                  "type": "string"
                }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customer_code": { "type": "string" },
                    "first_name": { "type": "string" },
                    "middle_name": { "type": "string" },
                    "last_name": { "type": "string" },
                    "address": { "type": "string" },
                    "aadhar_card": { "type": "string" },
                    "phone": { "type": "string" },
                    "email": { "type": "string" },
                    "password": { "type": "string" },
                    "role": { "type": "integer" },
                    "status": { "type": "integer" }
                  },
                  "required": [
                    "customer_code",
                    "first_name",
                    "last_name",
                    "address",
                    "aadhar_card",
                    "phone",
                    "email",
                    "password",
                    "role",
                    "status"
                  ]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User created successfully"
            },
            "400": {
              "description": "Bad request - Validation error"
            }
          }
        }
      },
      "/api/v1/user/{id}": {
        "get": {
          "summary": "Get user by ID",
          "description": "Retrieve user information by ID",
          "tags": ["User"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
                "name": "authToken",
                "in": "header",
                "description": "Auth Token",
                "required": true,
                "schema": {
                  "type": "string"
                }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response - User found"
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "put": {
          "summary": "Update user by ID",
          "description": "Update user information by ID",
          "tags": ["User"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
                "name": "authToken",
                "in": "header",
                "description": "Auth Token",
                "required": true,
                "schema": {
                  "type": "string"
                }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customer_code": { "type": "string" },
                    "first_name": { "type": "string" },
                    "middle_name": { "type": "string" },
                    "last_name": { "type": "string" },
                    "address": { "type": "string" },
                    "aadhar_card": { "type": "string" },
                    "phone": { "type": "string" },
                    "email": { "type": "string" },
                    "password": { "type": "string" },
                    "role": { "type": "integer" },
                    "status": { "type": "integer" }
                  }
                }
              }
            }
        },
        "responses": {
            "200": {
            "description": "User updated successfully"
            },
            "404": {
            "description": "User not found"
            },
            "400": {
            "description": "Invalid request"
            }
          }
        },
        "delete": {
          "summary": "Delete user by ID",
          "description": "Delete user information by ID",
          "tags": ["User"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
                "name": "authToken",
                "in": "header",
                "description": "Auth Token",
                "required": true,
                "schema": {
                  "type": "string"
                }
            }
          ],
          "responses": {
            "204": {
              "description": "User deleted successfully"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      },
      "/api/v1/login": {
        "post": {
            "summary": "User login",
            "tags": ["Login"],
            "description": "Endpoint for user login",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "customer_code": { "type": "string" },
                      "email": { "type": "string" },
                      "password": { "type": "string" }
                    },
                    "required": [
                      "customer_code",
                      "email",
                      "password"
                    ]
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Login successfully"
              },
              "400": {
                "description": "Bad request - Validation error"
              },
              "401": {
                "description": "Invalid credentials"
              },
              "404": {
                "description": "User not found"
              }
            }
          },
          "delete": {
            "summary": "User Logout",
            "tags": ["Login"],
            "description": "Endpoint for user logout",
            "parameters": [
                {
                    "name": "authToken",
                    "in": "header",
                    "description": "Auth Token",
                    "required": true,
                    "schema": {
                      "type": "string"
                    }
                }
              ],
            "responses": {
              "200": {
                "description": "Logout successfully"
              },
              "400": {
                "description": "Bad request - Validation error"
              }
            }
          }
      },
      "/api/v1/client": {
        "get": {
            "summary": "Get all Clients",
            "tags": ["Client"],
            "parameters": [
              {
                  "name": "authToken",
                  "in": "header",
                  "description": "Auth Token",
                  "required": true,
                  "schema": {
                    "type": "string"
                  }
              },
              {
                "name": "customer_code",
                "in": "query",
                "description": "Customer code",
                "required": true,
                "schema": {
                    "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Successful operation",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
        },
        "post": {
          "summary": "Create a new client",
          "tags": ["Client"],
          "description": "Endpoint to create a new client",
          "parameters": [
            {
                "name": "authToken",
                "in": "header",
                "description": "Auth Token",
                "required": true,
                "schema": {
                  "type": "string"
                }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",

                  "properties": {
                    "customer_code": { "type": "string" },
                    "name": { "type": "string" },
                    "address": { "type": "string" },
                    "contact_person": {
                        "type": "object",
                        "properties": {
                            "aadhar_card": { "type": "string" },
                            "phone": { "type": "string" },
                            "email": { "type": "string" },
                            "name": { "type": "string" }
                        },
                        "required" : ["name","phone","email"]
                    },
                    "client_type": { "type": "integer" },
                    "status": { "type": "integer" }
                  },
                  "required": [
                    "customer_code",
                    "name",
                    "contact_person",
                    "client_type",
                    "status"
                  ]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Client created successfully"
            },
            "400": {
              "description": "Bad request - Validation error"
            },
            "401": {
                "description": "Unauthorized"
              }
          }
        }
      },
      "/api/v1/client/{id}": {
        "get": {
          "summary": "Get client by ID",
          "description": "Retrieve client information by ID",
          "tags": ["Client"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
                "name": "authToken",
                "in": "header",
                "description": "Auth Token",
                "required": true,
                "schema": {
                  "type": "string"
                }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response - Client found"
            },
            "404": {
              "description": "User not found"
            },
            "401": {
                "description": "Unauthorized"
            }
          }
        },
        "put": {
          "summary": "Update client by ID",
          "description": "Update client information by ID",
          "tags": ["Client"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
                "name": "authToken",
                "in": "header",
                "description": "Auth Token",
                "required": true,
                "schema": {
                  "type": "string"
                }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customer_code": { "type": "string" },
                    "name": { "type": "string" },
                    "address": { "type": "string" },
                    "contact_person": {
                        "type": "object",
                        "properties": {
                            "aadhar_card": { "type": "string" },
                            "phone": { "type": "string" },
                            "email": { "type": "string" },
                            "name": { "type": "string" }
                        },
                        "required" : ["name","phone","email"]
                    },
                    "client_type": { "type": "integer" },
                    "status": { "type": "integer" }
                  },
                  "required": [
                    "customer_code",
                    "name",
                    "contact_person",
                    "client_type",
                    "status"
                  ]
                }
              }
            }
        },
        "responses": {
            "200": {
            "description": "User updated successfully"
            },
            "404": {
            "description": "User not found"
            },
            "400": {
            "description": "Invalid request"
            },
            "401": {
            "description": "Unauthorized"
            }
          }
        },
        "delete": {
          "summary": "Delete client by ID",
          "description": "Delete client information by ID",
          "tags": ["Client"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
                "name": "authToken",
                "in": "header",
                "description": "Auth Token",
                "required": true,
                "schema": {
                  "type": "string"
                }
            }
          ],
          "responses": {
            "204": {
              "description": "Client deleted successfully"
            },
            "404": {
              "description": "Client not found"
            },
            "401": {
                "description": "Unauthorized"
              }
          }
        }
      },
      "/api/v1/change_password/{id}": {
        "put": {
          "summary": "Change Password",
          "description": "Change Password",
          "tags": ["Login"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
                "name": "authToken",
                "in": "header",
                "description": "Auth Token",
                "required": true,
                "schema": {
                  "type": "string"
                }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "password": { "type": "string" }
                  }
                }
              }
            }
        },
        "responses": {
            "200": {
            "description": "Password updated successfully"
            },
            "404": {
            "description": "User not found"
            },
            "400": {
            "description": "Invalid request"
            },
            "401": {
            "description": "Token has expired"
            }
        }
        }
      },
      "/api/v1/forgot_password/{email}": {
        "get": {
            "summary": "Generate Forgot Password Key",
            "description": "Generate Forgot Password Key",
            "tags": ["Login"],
            "parameters": [
              {
                "name": "email",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Forgot Password Key Generated"
              },
              "404": {
                "description": "User not found"
              }
            }
          }
      },
      "/api/v1/reset_password": {
        "post": {
            "summary": "Reset Password",
            "tags": ["Login"],
            "description": "Reset Password",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "key": { "type": "string" },
                      "password": { "type": "string" }
                    },
                    "required": [
                      "key",
                      "password"
                    ]
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Password updated successfully"
              },
              "400": {
                "description": "Error in updating password"
              },
              "404": {
                "description": "User not found"
              }
            }
          }
      },
      "/api/v1/case": {
        "get": {
            "summary": "Get all Cases",
            "tags": ["Case"],
            "parameters": [
              {
                  "name": "authToken",
                  "in": "header",
                  "description": "Auth Token",
                  "required": true,
                  "schema": {
                    "type": "string"
                  }
              },
              {
                "name": "customer_code",
                "in": "query",
                "description": "Customer code",
                "required": true,
                "schema": {
                    "type": "string"
                }
              },
              {
                "name": "client_id",
                "in": "query",
                "description": "Client id",
                "required": false,
                "schema": {
                    "type": "string"
                }
              },
              {
                "name": "opposition_name",
                "in": "query",
                "description": "Opposition Name",
                "required": false,
                "schema": {
                    "type": "string"
                }
              },
              {
                "name": "opposition_lawyer_name",
                "in": "query",
                "description": "Opposition Lawyer Name",
                "required": false,
                "schema": {
                    "type": "string"
                }
              },
              {
                "name": "case_type",
                "in": "query",
                "description": "Case Type",
                "required": false,
                "schema": {
                    "type": "integer"
                }
              },
              {
                "name": "court_type",
                "in": "query",
                "description": "Court Type",
                "required": false,
                "schema": {
                    "type": "integer"
                }
              },
              {
                "name": "added_by",
                "in": "query",
                "description": "Added by",
                "required": false,
                "schema": {
                    "type": "string"
                }
              },
              {
                "name": "status",
                "in": "query",
                "description": "Status",
                "required": false,
                "schema": {
                    "type": "integer"
                }
              },
              {
                "name": "per_page",
                "in": "query",
                "description": "Per page",
                "required": false,
                "schema": {
                    "type": "string"
                }
              },
              {
                "name": "page_number",
                "in": "query",
                "description": "Page Number",
                "required": false,
                "schema": {
                    "type": "string"
                }
              },
              {
                "name": "sort_by",
                "in": "query",
                "description": "Sort by (column name)",
                "required": false,
                "schema": {
                    "type": "string"
                }
              },
              {
                "name": "order",
                "in": "query",
                "description": "Order by (asc, desc)",
                "required": false,
                "schema": {
                    "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Successful operation",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
        },
        "post": {
          "summary": "Create a new case",
          "tags": ["Case"],
          "description": "Endpoint to create a new case",
          "parameters": [
            {
                "name": "authToken",
                "in": "header",
                "description": "Auth Token",
                "required": true,
                "schema": {
                  "type": "string"
                }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",

                  "properties": {
                    "customer_code": { "type": "string" },
                    "client_id": { "type": "string" },
                    "title": { "type": "string" },
                    "Description": { "type": "string" },
                    "case_type": {
                      "type": "integer",
                      "enum": [1, 2, 3, 4, 5, 6, 7, 8]
                    },
                    "court_type": {
                      "type": "integer",
                      "enum": [1, 2, 3, 4, 5]
                    },
                    "status": {
                      "type": "integer",
                      "enum": [0, 1, 2]
                    },
                    "opposition": {
                      "type": "object",
                      "properties": {
                        "name": { "type": "string" },
                        "phone": { "type": "string" },
                        "email": { "type": "string" },
                        "address": { "type": "string" },
                        "type": {
                          "type": "integer",
                          "enum": [1, 2]
                        }
                      }
                    },
                    "opposition_lawyer": {
                      "type": "object",
                      "properties": {
                        "name": { "type": "string" },
                        "phone": { "type": "string" },
                        "email": { "type": "string" },
                        "address": { "type": "string" }
                      }
                    }
                  },
                  "required": [
                    "customer_code",
                    "client_id",
                    "title",
                    "Description",
                    "case_type",
                    "court_type",
                    "status",
                    "opposition_lawyer",
                    "opposition"
                  ]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Case created successfully"
            },
            "400": {
              "description": "Bad request - Validation error"
            },
            "401": {
                "description": "Unauthorized"
              }
          }
        }
      },
      "/api/v1/case/{id}": {
        "get": {
          "summary": "Get case by ID",
          "description": "Retrieve case information by ID",
          "tags": ["Case"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
                "name": "authToken",
                "in": "header",
                "description": "Auth Token",
                "required": true,
                "schema": {
                  "type": "string"
                }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response - Case found"
            },
            "404": {
              "description": "case not found"
            },
            "401": {
                "description": "Unauthorized"
            }
          }
        },
        "put": {
          "summary": "Update case by ID",
          "description": "Update client information by ID",
          "tags": ["Case"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
                "name": "authToken",
                "in": "header",
                "description": "Auth Token",
                "required": true,
                "schema": {
                  "type": "string"
                }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customer_code": { "type": "string" },
                    "client_id": { "type": "string" },
                    "title": { "type": "string" },
                    "Description": { "type": "string" },
                    "case_type": {
                      "type": "integer",
                      "enum": [1, 2, 3, 4, 5, 6, 7, 8]
                    },
                    "court_type": {
                      "type": "integer",
                      "enum": [1, 2, 3, 4, 5]
                    },
                    "status": {
                      "type": "integer",
                      "enum": [0, 1, 2]
                    },
                    "opposition": {
                      "type": "object",
                      "properties": {
                        "name": { "type": "string" },
                        "phone": { "type": "string" },
                        "email": { "type": "string" },
                        "address": { "type": "string" },
                        "type": {
                          "type": "integer",
                          "enum": [1, 2]
                        }
                      }
                    },
                    "opposition_lawyer": {
                      "type": "object",
                      "properties": {
                        "name": { "type": "string" },
                        "phone": { "type": "string" },
                        "email": { "type": "string" },
                        "address": { "type": "string" }
                      }
                    }
                  },
                  "required": [
                    "customer_code",
                    "client_id",
                    "title",
                    "Description",
                    "case_type",
                    "court_type",
                    "status",
                    "opposition_lawyer",
                    "opposition"
                  ]
                }
              }
            }
        },
        "responses": {
            "200": {
            "description": "Case updated successfully"
            },
            "404": {
            "description": "User not found"
            },
            "400": {
            "description": "Invalid request"
            },
            "401": {
            "description": "Unauthorized"
            }
          }
        },
        "delete": {
          "summary": "Delete case by ID",
          "description": "Delete case information by ID",
          "tags": ["Case"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
                "name": "authToken",
                "in": "header",
                "description": "Auth Token",
                "required": true,
                "schema": {
                  "type": "string"
                }
            }
          ],
          "responses": {
            "204": {
              "description": "Case deleted successfully"
            },
            "404": {
              "description": "Case not found"
            },
            "401": {
                "description": "Unauthorized"
              }
          }
        }
      },
      "/api/v1/document": {
        "get": {
            "summary": "Get all documents",
            "tags": ["Document"],
            "parameters": [
              {
                  "name": "authToken",
                  "in": "header",
                  "description": "Auth Token",
                  "required": true,
                  "schema": {
                    "type": "string"
                  }
              },
              {
                "name": "customer_code",
                "in": "query",
                "description": "Customer code",
                "required": true,
                "schema": {
                    "type": "string"
                }
              },
              {
                "name": "case_id",
                "in": "query",
                "description": "Case Id",
                "required": false,
                "schema": {
                    "type": "string"
                }
              },
              {
                "name": "added_by",
                "in": "query",
                "description": "Added by",
                "required": false,
                "schema": {
                    "type": "string"
                }
              },
              {
                "name": "per_page",
                "in": "query",
                "description": "Per page",
                "required": false,
                "schema": {
                    "type": "string"
                }
              },
              {
                "name": "page_number",
                "in": "query",
                "description": "Page Number",
                "required": false,
                "schema": {
                    "type": "string"
                }
              },
              {
                "name": "sort_by",
                "in": "query",
                "description": "Sort by (column name)",
                "required": false,
                "schema": {
                    "type": "string"
                }
              },
              {
                "name": "order",
                "in": "query",
                "description": "Order by (asc, desc)",
                "required": false,
                "schema": {
                    "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Successful operation",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "current_page": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
        },
        "post": {
          "summary": "Add new document",
          "tags": ["Document"],
          "description": "Endpoint to add new document",
          "parameters": [
            {
                "name": "authToken",
                "in": "header",
                "description": "Auth Token",
                "required": true,
                "schema": {
                  "type": "string"
                }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",

                  "properties": {
                    "title": { "type": "string" },
                    "note": { "type": "string" },
                    "customer_code": { "type": "string" },
                    "case_id": { "type": "string" },
                    "document": { "type": "string", "format": "binary" }
                  },
                  "required": [
                    "title",
                    "customer_code",
                    "case_id",
                    "document"
                  ]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Document added successfully"
            },
            "400": {
              "description": "Bad request - Validation error"
            },
            "401": {
                "description": "Unauthorized"
              }
          }
        }
      },
      "/api/v1/document/{id}": {
        "get": {
          "summary": "Get document by ID",
          "description": "Retrieve document information by ID",
          "tags": ["Document"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
                "name": "authToken",
                "in": "header",
                "description": "Auth Token",
                "required": true,
                "schema": {
                  "type": "string"
                }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response - Document found"
            },
            "404": {
              "description": "Document not found"
            },
            "401": {
                "description": "Unauthorized"
            }
          }
        },
        "put": {
          "summary": "Update document by ID",
          "description": "Update document information by ID",
          "tags": ["Document"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
                "name": "authToken",
                "in": "header",
                "description": "Auth Token",
                "required": true,
                "schema": {
                  "type": "string"
                }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
            "multipart/form-data": {
                "schema": {
                    "type": "object",

                    "properties": {
                    "title": { "type": "string" },
                    "note": { "type": "string" },
                    "customer_code": { "type": "string" },
                    "case_id": { "type": "string" },
                    "document": { "type": "string", "format": "binary" }
                    },
                    "required": [
                    "title",
                    "customer_code",
                    "case_id",
                    "document"
                    ]
                }
            }
            }
        },
        "responses": {
            "200": {
            "description": "Document updated successfully"
            },
            "404": {
            "description": "Document not found"
            },
            "400": {
            "description": "Invalid request"
            },
            "401": {
            "description": "Unauthorized"
            }
          }
        },
        "delete": {
          "summary": "Delete document by ID",
          "description": "Delete document information by ID",
          "tags": ["Document"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
                "name": "authToken",
                "in": "header",
                "description": "Auth Token",
                "required": true,
                "schema": {
                  "type": "string"
                }
            }
          ],
          "responses": {
            "204": {
              "description": "Docuemnt deleted successfully"
            },
            "404": {
              "description": "Docuemnt not found"
            },
            "401": {
                "description": "Unauthorized"
              }
          }
        }
      },
      "/api/v1/access_document/{id}": {
        "get": {
          "summary": "Get document access",
          "description": "Get document access",
          "tags": ["Document"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
                "name": "authToken",
                "in": "header",
                "description": "Auth Token",
                "required": true,
                "schema": {
                  "type": "string"
                }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response - Document found"
            },
            "404": {
              "description": "Document not found"
            },
            "401": {
                "description": "Unauthorized"
            }
          }
        }
      },
      "/api/v1/note": {
        "get": {
            "summary": "Get all notes",
            "tags": ["Note"],
            "parameters": [
              {
                  "name": "authToken",
                  "in": "header",
                  "description": "Auth Token",
                  "required": true,
                  "schema": {
                    "type": "string"
                  }
              },
              {
                "name": "customer_code",
                "in": "query",
                "description": "Customer code",
                "required": true,
                "schema": {
                    "type": "string"
                }
              },
              {
                "name": "case_id",
                "in": "query",
                "description": "Case Id",
                "required": false,
                "schema": {
                    "type": "string"
                }
              },
              {
                "name": "added_by",
                "in": "query",
                "description": "Added by",
                "required": false,
                "schema": {
                    "type": "string"
                }
              },
              {
                "name": "per_page",
                "in": "query",
                "description": "Per page",
                "required": false,
                "schema": {
                    "type": "string"
                }
              },
              {
                "name": "page_number",
                "in": "query",
                "description": "Page Number",
                "required": false,
                "schema": {
                    "type": "string"
                }
              },
              {
                "name": "sort_by",
                "in": "query",
                "description": "Sort by (column name)",
                "required": false,
                "schema": {
                    "type": "string"
                }
              },
              {
                "name": "order",
                "in": "query",
                "description": "Order by (asc, desc)",
                "required": false,
                "schema": {
                    "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Successful operation",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "current_page": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
        },
        "post": {
          "summary": "Add new Note",
          "tags": ["Note"],
          "description": "Endpoint to add new note",
          "parameters": [
            {
                "name": "authToken",
                "in": "header",
                "description": "Auth Token",
                "required": true,
                "schema": {
                  "type": "string"
                }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customer_code": { "type": "string" },
                    "case_id": { "type": "string" },
                    "note": { "type": "string" }
                  },
                  "required": [
                    "customer_code",
                    "case_id",
                    "note"
                  ]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Notes added successfully"
            },
            "400": {
              "description": "Bad request - Validation error"
            },
            "401": {
                "description": "Unauthorized"
              }
          }
        }
      },
      "/api/v1/note/{id}": {
        "get": {
          "summary": "Get notes by ID",
          "description": "Get case notes by ID",
          "tags": ["Note"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
                "name": "authToken",
                "in": "header",
                "description": "Auth Token",
                "required": true,
                "schema": {
                  "type": "string"
                }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response - Note found"
            },
            "404": {
              "description": "Note not found"
            },
            "401": {
                "description": "Unauthorized"
            }
          }
        },
        "put": {
          "summary": "Update note by ID",
          "description": "Update note by ID",
          "tags": ["Note"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
                "name": "authToken",
                "in": "header",
                "description": "Auth Token",
                "required": true,
                "schema": {
                  "type": "string"
                }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customer_code": { "type": "string" },
                    "case_id": { "type": "string" },
                    "note": { "type": "string" }
                  },
                  "required": [
                    "customer_code",
                    "case_id",
                    "note"
                  ]
                }
              }
            }
        },
        "responses": {
            "200": {
            "description": "Note updated successfully"
            },
            "404": {
            "description": "Note not found"
            },
            "400": {
            "description": "Invalid request"
            },
            "401": {
            "description": "Unauthorized"
            }
          }
        },
        "delete": {
          "summary": "Delete note by ID",
          "description": "Delete note information by ID",
          "tags": ["Note"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
                "name": "authToken",
                "in": "header",
                "description": "Auth Token",
                "required": true,
                "schema": {
                  "type": "string"
                }
            }
          ],
          "responses": {
            "204": {
              "description": "Note deleted successfully"
            },
            "404": {
              "description": "Note not found"
            },
            "401": {
                "description": "Unauthorized"
              }
          }
        }
      }
    }
  }
  